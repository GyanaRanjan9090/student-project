{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/student/student.component.ts","./src/app/student/student.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { StudentComponent } from './student/student.component';\n\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/login', pathMatch: 'full' }, // Default route\n  { path: 'login', component: LoginComponent },\n  { path: 'student', component: StudentComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)], // Configure the router\n  exports: [RouterModule]      // Export it so other modules can use the routE\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'student';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { StudentComponent } from './student/student.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { LoginComponent } from './login/login.component';\n//import { ToastrModule } from 'ngx-toastr';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    StudentComponent,\n    LoginComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n  \n    //ToastrModule\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent {\n  loginForm: FormGroup;\n\n  constructor(private fb: FormBuilder, private router: Router) {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  onLogin() {\n    if (this.loginForm.valid) {\n      // Add actual authentication logic here\n      this.router.navigate(['/student']);\n    }\n  }\n}\n","\n\n<!--div class=\"container mt-35\">\n    <h2>Login</h2>\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onLogin()\">\n      <div class=\"form-group\">\n        <label for=\"email\">Email:</label>\n        <input type=\"email\" formControlName=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Enter your email\" />\n      </div>\n      <div class=\"form-group mt-3\">\n        <label for=\"password\">Password:</label>\n        <input type=\"password\" formControlName=\"password\" class=\"form-control\" id=\"password\" placeholder=\"Enter your password\" />\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary mt-3\">Login</button>\n    </form>\n  </div-->\n\n\n  <nav class=\"navbar navbar-light bg-dark\">\n    <div class=\"container-fluid\">\n      <h2 class=\"text-light primary py-3\">STUDENT MANAGEMENT </h2>\n      <div class=\"d-flex\">\n\n      </div>\n    </div>\n  </nav>\n<div  class=\"container mt-5\" style=\"background-color: greenyellow; width: 600px; border-radius: 10px; border-color: black; \">\n    <div class=\"border p-4 rounded shadow-sm\">\n    <h2>Login</h2>\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onLogin()\">\n      <div class=\"form-group\">\n        <label for=\"email\">Email:</label>\n        <input type=\"email\" formControlName=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Enter your email\" />\n      </div>\n      <div class=\"form-group mt-3\">\n        <label for=\"password\">Password:</label>\n        <input type=\"password\" formControlName=\"password\" class=\"form-control\" id=\"password\" placeholder=\"Enter your password\" />\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary mt-3\">Login</button>\n    </form>\n  </div>\n</div> \n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n//import { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-student',\n  templateUrl: './student.component.html',\n  styleUrls: ['./student.component.scss'] // Ensure this is correct\n})\nexport class StudentComponent implements OnInit {\n  showadd: boolean = false;\n  showupdate: boolean = false;\n\n  formValue: FormGroup;\n  studentList: any[] = []; // Dynamic array to hold student data\n  currentEditIndex: number | null = null; // Index of student being edited\n\n  constructor(private formBuilder: FormBuilder , private router: Router ) {}   //private toastr: ToastrService\n  logout() {\n    this.router.navigate(['/login']);\n  }\n\n  ngOnInit(): void {\n    this.formValue = this.formBuilder.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      mobile: ['', [Validators.required, Validators.pattern(/^[0-9]{10}$/)]],\n      city: ['', Validators.required],\n    });\n  }\n\n  add() {\n    this.showadd = true;\n    this.showupdate = false;\n    this.formValue.reset(); // Clear the form for new entries\n\n    //this.toastr.success('Student added successfully!');\n  }\n\n  addStudent() {\n    const newStudent = this.formValue.value; // Get form data\n    this.studentList.push(newStudent); // Add new student to the list\n    this.formValue.reset(); // Reset the form\n    this.showadd = false; // Close the modal\n  }\n\n  editStudent(index: number) {\n    this.currentEditIndex = index;\n    const student = this.studentList[index];\n    this.formValue.patchValue(student); // Populate the form with student data\n    this.showadd = false;\n    this.showupdate = true;\n  }\n\n  \n  updateStudent() {\n    if (this.currentEditIndex !== null) {\n      this.studentList[this.currentEditIndex] = this.formValue.value; // Update the student\n      this.currentEditIndex = null;\n    }\n    this.formValue.reset(); // Reset the form\n    this.showupdate = false; // Close the modal\n  }\n\n  deleteStudent(index: number) {\n    this.studentList.splice(index, 1); // Remove the student from the list\n  }\n\n  \n}\n"," <!--nav class=\"navbar navbar-light bg-dark\">\n    <div class=\"container-fluid\">\n        <h2 CLASS=\"text-light primary py-3\">STUDENT MANAGEMENT </h2>\n        <div class=\"d-flex\">\n              <button class=\"btn btn-success\" (click)=add() data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">Add Student</button> &nbsp;\n              <button class=\"btn btn-warning\">Logout</button>\n    </div>\n    </div>\n</nav>\n<table>\n<table class=\"table mt-4\">\n    <thead>\n        <tr>\n            <th scope=\"col\">S.Id</th>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Email</th>\n            <th scope=\"col\">Mobile</th>\n            <th scope=\"col\">City</th>\n            <th scope=\"col\">Action</th>\n            \n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>1</td>\n            <td>Gyan</td>\n            <td>abc.com</td>\n            <td>123</td>\n            <td>Noida</td>\n            <td>\n                <button class=\"btn  btn-info\"(click)=\"update()\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">Edit</button>&nbsp;\n                <button class=\"btn btn-danger\">Delete</button>\n             </td>\n        </tr>\n    </tbody>\n</table>\n\n\n  \n  <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document\">\n      <div class=\"modal-content\">\n        <div  style=\"background:blue\"class=\"modal-header\">\n          <h5 style=\"color: aliceblue ;font-size:20px;margin: left 62px;font-weight:620;\"class=\"modal-title\" id=\"exampleModalLabel\">STUDENT MANAGEMENT</h5>\n          <button type=\"button\" class=\"close btn-close\" data-dismiss=\"modal\" aria-label=\"Close\" >\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n            <form [formGroup]=\"formValue\"> \n                <div class=\"form-group\">\n                  <label for=\"exampleInputEmail1\">Name</label>\n                  <input type=\"name\" formControlName=\"name\"class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter your Name\">\n\n                  <small *ngIf=\"formValue.get('name')?.invalid && formValue.get('name')?.touched\" class=\"text-danger\"> Name is Required</small>\n                </div>\n           <br>\n                <div class=\"form-group\">\n                    <label for=\"exampleInputEmail1\">Email</label>\n                    <input type=\"email\" formControlName=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter your email\">\n                    <small *ngIf=\"formValue.get('email')?.invalid && formValue.get('email')?.touched\"class=\"text-danger\">Email is Required</small>\n\n                </div>\n            <br>\n                <div class=\"form-group\">\n                    <label for=\"exampleInputEmail1\">Mobile</label>\n                    <input type=\"number\" formControlName=\"mobile\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter your mobile\">\n\n                    <small *ngIf=\"formValue.get('mobile')?.invalid && formValue.get('mobile')?.touched\"class=\"text-danger\">Mobile is Required</small>\n\n                </div>\n            <br>\n                <div class=\"form-group\">\n                    <label for=\"exampleInputEmail1\">City</label>\n                    <input type=\"city\" formControlName=\"city\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter your city\">\n\n                    <small *ngIf=\"formValue.get('city')?.invalid && formValue.get('city')?.touched\"class=\"text-danger\">City is Required</small>\n\n                </div>\n                \n              </form>\n\n        </div>\n        <div  style=\"background: blue;\"class=\"modal-footer\">\n          <button type=\"button\"  class=\"btn btn-warning\" data-dismiss=\"modal\">Close</button>\n          <button *ngIf=\"showadd\" type=\"button\" class=\"btn btn-success\">Add</button>\n          <button *ngIf=\"showupdate\"type=\"button\" class=\"btn btn-success\">Update</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n\n   \n\n   <!-- p-table>\n            <ng-template pTemplate=\"caption\">\n                <div class=\"p-grid p-grid p-align-center p-justify-between w-100-p\">\n                    <span class=\"font-14\">Student details</span>\n                    <div class=\"p-col-fixed p-col-nogutter p-grid p-align-center\">\n\n                        <div class=\"type-search width-200 mr-8\" pTooltip=\"Global Search\" tooltipPosition=\"top\">\n                            <i class=\"left-icon icons8 icons8-search\"></i>\n                            <input type=\"text\" placeholder=\"Search in Events\" (input)=\"customGlobalFilter($event.target.value)\"\n                                class=\"pl-20 w-100-p\" pInputText>\n                        </div>\n\n                        <button type=\"button\" pButton class=\"ui-btn-primary\" [disabled]=\"isDefaultSelection\"\n                            label=\"Add Event\" (click)=\"addDataInEDFfile()\"> </button>\n                        <button type=\"button\" pButton class=\"ui-btn-primary ml-8\" [disabled]=\"isDefaultSelection || !eventData.length\"\n                            label=\"Save\" (click)=\"saveEDF()\" [pTooltip]=\"getTooltipText()\" tooltipPosition=\"right\"></button>\n\n                    </div>\n                </div>\n            </ng-template>\n            <ng-template pTemplate=\"colgroup\" let-columns>\n                <colgroup>\n                    <col style=\"width:11%\">\n                    <col style=\"width:16%\">\n                    <col style=\"width:16%\">\n                    <col style=\"width:16%\">\n                    <col style=\"width:10%\">\n                    <col style=\"width:24%\">\n                    <col style=\"width:7%\">\n                </colgroup>\n            </ng-template>\n            <ng-template pTemplate=\"header\">\n                <tr>\n                    <ng-container>\n                         <th pReorderableColumn [pSortableColumn]=\"col.field\">\n                            {{col.header}}\n                            <p-sortIcon [field]=\"col.field\" ariaLabel=\"Activate to sort\"\n                                ariaLabelDesc=\"Activate to sort in descending order\"\n                                ariaLabelAsc=\"Activate to sort in ascending order\">\n                            </p-sortIcon>\n                        </th> -->\n                        <!--th> sdhfdsih</th-->\n                    <!--/ng-container>\n\n                    <th class=\"width-70 text-center\">Action</th>\n                </tr>\n            </ng-template>\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\n                <tr>\n                    <td [ngClass]=\"(rowData[col.field] >= 0 && col.field != 'FilteringMode' ) ||  col.field == 'Mode'?  'text-right' : 'text-left' \"\n                        *ngFor=\"let col of columns\">\n                        <span *ngIf=\"col.field != 'FilteringMode'\">\n                            {{rowData[col.field]}}\n                        </span>\n                        <span *ngIf=\"col.field == 'FilteringMode'\">\n                            {{rowData[col.field] | filterName}}\n                        </span>\n                    </td>\n                    <td class=\"text-center\">\n                        <button pButton type=\"button\" class=\"btn-icon\" [disabled]=\"isDefaultSelection\"\n                            (click)=\"clickUpdateRow(rowData)\" pTooltip=\"Update\"> <i class=\"las-edit\"></i> </button>\n                        <button pButton type=\"button\" class=\"btn-icon\" icon=\"icons8 icons8-trash\"\n                            [disabled]=\"isDefaultSelection\" (click)=\"delete_rowData(rowData)\"\n                            pTooltip=\"Delete\"></button>\n                    </td>\n\n                </tr>\n            </ng-template>\n            <ng-template pTemplate=\"emptymessage\" let-columns>\n                <tr>\n                    <td [attr.colspan]=\"tableCols.length + 2\" class=\"text-center \">\n                        <span>No records found</span>\n                    </td>\n                </tr>\n            </ng-template>\n        </p-table -->   \n\n\n\n          <nav class=\"navbar navbar-light bg-dark\">\n            <div class=\"container-fluid\">\n              <h2 class=\"text-light primary py-3\">STUDENT TABLE </h2>\n              <div class=\"d-flex\">\n                <button class=\"btn btn-success\" (click)=\"add()\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">Add Student</button>&nbsp;\n                <button class=\"btn btn-warning  \" (click)=\"logout()\">Logout</button>\n              </div>\n            </div>\n          </nav>\n          \n          <table class=\"table mt-4\">\n            <thead>\n              <tr>\n                <th scope=\"col\">S. Id</th>\n                <th scope=\"col\">Name</th>\n                <th scope=\"col\">Email</th>\n                <th scope=\"col\">Mobile</th>\n                <th scope=\"col\">City</th>\n                <th scope=\"col\">Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let student of studentList; let i = index\">\n                <td>{{ i + 1 }}</td>\n                <td>{{ student.name }}</td>\n                <td>{{ student.email }}</td>\n                <td>{{ student.mobile }}</td>\n                <td>{{ student.city }}</td>\n                <td>\n                  <button class=\"btn btn-info\" (click)=\"editStudent(i)\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">Edit</button>&nbsp;\n                  <button class=\"btn btn-danger\" (click)=\"deleteStudent(i)\">Delete</button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          \n          <!-- Modal for Add/Edit Student -->\n          <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\" >\n            <div class=\"modal-dialog\" role=\"document\">\n              <div class=\"modal-content\">\n                <div style=\"background:blue\" class=\"modal-header\">\n                  <h5 style=\"color: aliceblue; font-size:20px; margin: left 62px; font-weight:620;\" class=\"modal-title\" id=\"exampleModalLabel\">STUDENT MANAGEMENT</h5>\n                  <button type=\"button\" class=\"close btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                </div>\n                <div class=\"modal-body\">\n                  <form [formGroup]=\"formValue\">\n                    <div class=\"form-group\">\n                      <label for=\"name\">Name</label>\n                      <input type=\"text\" formControlName=\"name\" class=\"form-control\" id=\"name\" placeholder=\"Enter your Name\">\n                      <small *ngIf=\"formValue.get('name')?.invalid && formValue.get('name')?.touched\" class=\"text-danger\">Name is Required</small>\n                    </div>\n                    <br>\n                    <div class=\"form-group\">\n                      <label for=\"email\">Email</label>\n                      <input type=\"email\" formControlName=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Enter your email\">\n                      <small *ngIf=\"formValue.get('email')?.invalid && formValue.get('email')?.touched\" class=\"text-danger\">Email is Required</small>\n                    </div>\n                    <br>\n                    <div class=\"form-group\">\n                      <label for=\"mobile\">Mobile</label>\n                      <input type=\"text\" formControlName=\"mobile\" class=\"form-control\" id=\"mobile\" placeholder=\"Enter your mobile\">\n                      <small *ngIf=\"formValue.get('mobile')?.invalid && formValue.get('mobile')?.touched\" class=\"text-danger\">Mobile is Required</small>\n                    </div>\n                    <br>\n                    <div class=\"form-group\">\n                      <label for=\"city\">City</label>\n                      <input type=\"text\" formControlName=\"city\" class=\"form-control\" id=\"city\" placeholder=\"Enter your city\">\n                      <small *ngIf=\"formValue.get('city')?.invalid && formValue.get('city')?.touched\" class=\"text-danger\">City is Required</small>\n                    </div>\n                  </form>\n                </div>\n                <div style=\"background: blue;\" class=\"modal-footer\">\n                  <button type=\"button\" class=\"btn btn-warning\" data-bs-dismiss=\"modal\" >Close</button>\n                  <button *ngIf=\"showadd\" type=\"button\" class=\"btn btn-success\" (click)=\"addStudent()\" data-bs-dismiss=\"modal\">Add</button>\n                  <button *ngIf=\"showupdate\" type=\"button\" class=\"btn btn-success\" (click)=\"updateStudent() \" data-bs-dismiss=\"modal\">Update</button>\n                </div>\n              </div>\n            </div>\n          </div>\n          ","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}